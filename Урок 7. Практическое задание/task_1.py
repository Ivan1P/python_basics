"""
Задание 1.

Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init()__),
который должен принимать данные (список списков) для формирования матрицы.
[[], [], []]
Следующий шаг — реализовать перегрузку метода __str()__ для вывода матрицы в привычном виде.

Далее реализовать перегрузку метода __add()__ для реализации операции
сложения двух объектов класса Matrix (двух матриц).
Результатом сложения должна быть новая матрица.

Подсказка: сложение элементов матриц выполнять поэлементно —
первый элемент первой строки первой матрицы складываем
с первым элементом первой строки второй матрицы и т.д.

Пример:
1 2 3
4 5 6
7 8 9

1 2 3
4 5 6
7 8 9

Сумма матриц:
2 4 6
8 10 12
14 16 18
"""

l1 = []
l2 = []
l3 = []
sum_lst = []


class Matrix:
    def __init__(self, *args):
        self.new_lst = list(args)

    def __add__(self, other):
        for el in self.new_lst:
            for i in range(0, len(self.new_lst)):
                print (f'i={i}')
                sum_lst[i] = self.new_lst + other.new_lst
        return sum_lst


m1 = Matrix([1, 5, 7], [3, 3, 5], [7, 2, 1])
m2 = Matrix([3, 3, 3], [5, 5, 5], [7, 7, 7])

# print(m2.l2)
# print(m2)
# print (m1.l1)

# for el in m1.new_lst:
#    print(el)
#    print(m1.new_lst)
#    print(m2.new_lst)
print(m1 + m2)
